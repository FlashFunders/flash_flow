#!/usr/bin/env ruby

require 'flash_flow'

options = FlashFlow::Options.parse

if options[:install]
  FlashFlow::Install.install
  exit(0)
end

FlashFlow::Config.configure!(options[:config_file])
case
  when options[:prod_deploy]
    FlashFlow::IssueTracker::Base.new(FlashFlow::Config.configuration.issue_tracker).production_deploy
  when options[:review_deploy]
    FlashFlow::IssueTracker::Base.new(FlashFlow::Config.configuration.issue_tracker).stories_delivered
  when options[:release_notes]
    FlashFlow::IssueTracker::Base.new(FlashFlow::Config.configuration.issue_tracker).release_notes(options[:release_notes])
  when options[:resolve]
    FlashFlow::Resolve.new(Config.configuration.git, Config.configuration.branch_info_file, logger: Config.configuration.logger).start
  when options[:resolve_manual]
    FlashFlow::Resolve.new(Config.configuration.git, Config.configuration.branch_info_file, logger: Config.configuration.logger).manual_instructions
  else
    FlashFlow::Deploy.new(options).run
    FlashFlow::IssueTracker::Base.new(FlashFlow::Config.configuration.issue_tracker).stories_pushed
end
